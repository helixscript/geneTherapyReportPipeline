% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unique_granges.R
\name{unique_granges}
\alias{unique_granges}
\title{Determine all unique rows in GRanges object}
\usage{
unique_granges(sites)

unique_granges(sites, sum.cols = FALSE, rm.cols = NULL, rm.dup.cols = NULL)
}
\arguments{
\item{sites}{A GRanges object with or without metadata columns.}

\item{sum.cols}{a logical or character vector of column name(s) in the 
metadata of the input GRanges object to sum across unique observations. 
These column(s) will not be considered when identifying unique observations. 
Default is FALSE, if set to TRUE, then will attempt to sum the column 
'counts'.}

\item{rm.cols}{a character vector of column name(s) to remove from the 
metadata of the input GRanges object. Removal of columns will occur prior to 
identifying unique observations, and therefore these columns will not only 
be dropped from the output, but will not be considered in identifying unique 
observations.}

\item{rm.dup.cols}{logical or a regular expression to identify duplicate 
columns and remove the duplicates. This will only remove columns that are 
true duplicates, meaning they have identical content. Removal of duplicated 
columns will occur prior to identifying unique observations, and therefore 
identified duplicates will not only be dropped from the output, but will not 
be considered in identifying unique observations.}
}
\description{
Given a GRanges object, this function returns all unique rows,
or observations, including the meta data information. Calling the function
\code{unique()} on a GRanges object only returns unique ranges, and does not
account for meta data information, unlike to a data.frame. Using the option
sum.counts = TRUE and specifying the counts.col = "" name, will sum the
numerical values within the column for all combined rows.
}
\details{
\code{unique_granges} returns a GRanges object of only unique observations (
removing all duplicated rows), yet considers the meta data information.
}
\examples{
gr <- gintools:::generate_test_granges(
  n_sites = 1,
  n_reads_p_site = 12,
  site_range = 1:20,
  read_width_range = 20:30
)
gr <- refine_breakpoints(gr)
gr <- standardize_sites(gr)
gr$sample <- rep(c("A","B"), 6)
gr$sample.1 <- rep(c("A","B"), 6)
gr$counts <- rep(1:4, c(3,3,3,3))

# Calling unique() on gr returns a miss interpreted data set
unique(gr)

# Using unique_granges() without options returns all distinct rows
unique_granges(gr)

# Using the options for sum.cols, rows 'counts' are added when combined 
# together.
unique_granges(gr, sum.cols = TRUE)

# Or multiple columns can be added simultaneously.
gr$tags <- rep(1:2, c(6,6))
unique_granges(gr, sum.cols = c("counts", "tags"))

# Remove specific columns by passing a character vector to 'rm.cols'
unique_granges(gr, sum.cols = c("counts", "tags"), rm.cols = "sample.1")

# Remove any column that may be a duplicate of another with a specific 
# name pattern. Column content will be checked for identity before removal.
unique_granges(gr, sum.cols = c("counts", "tags"), rm.dup.cols = "[\\\\w]+")

}
\author{
Christopher L. Nobles, Ph.D.
}
